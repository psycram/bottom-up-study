
@app.route('/next-course')
@login_required
def load_next_course():
    # ユーザーがすでに完了した、または不要と判断された講座のIDリストを取得
    completed_course_ids = [progress.course_id for progress in UserCourseProgress.query.filter_by(user_id=current_user.id).all()]
    unnecessary_course_ids = [unnecessary.course_id for unnecessary in UnnecessaryCourses.query.filter_by(user_id=current_user.id).all()]

    # 完了しておらず、不要とされていない講座のうち、priorityが最も高いものを取得
    next_course = Course.query.filter(
        ~Course.id.in_(completed_course_ids + unnecessary_course_ids)
    ).order_by(Course.priority).first()

    if not next_course:
        # 未完了で必要なコースが存在しない場合、ホームにリダイレクト
        return redirect(url_for('index'))

    # 次のコースに紐づくすべてのLectureを取得
    lectures = Lecture.query.filter_by(course_id=next_course.id).order_by(Lecture.id).all()

    if not lectures:
        # コース内にレクチャーがない場合もホームにリダイレクト
        return redirect(url_for('index'))

    # コースとその講義リストをテンプレートに渡して表示
    return render_template('pages/lecture.html', course=next_course, lectures=lectures)