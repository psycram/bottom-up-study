































from flask import jsonify
from .models.models import User
from flask_login import login_user
import stripe

@app.route('/premium-output', methods=['POST'])
def output_premium_text():
    # フォームデータから入力テキストと選択された機能を取得
    input_text = request.form['input-text']
    selected_option = request.form['function']  # 'function'は選択肢のname属性

    # 選択されたオプションに応じて異なるプロンプトを設定
    if selected_option == 'reaction-paper':
        prompt = "リアクションペーパーを生成"
    elif selected_option == 'note-creation':
        prompt = "ノートを生成"
    elif selected_option == 'problem-creation':
        prompt = "問題を生成"

    # GPTモデルを使ってテキストを解析する
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": prompt},
            {"role": "user", "content": input_text}
        ],
        max_tokens=400
    )

    # 解析結果を取得して返す
    output_text = response['choices'][0]['message']['content']
    return render_template('pages/index.html', input_text=input_text, output_text=output_text)


@app.route('/premium')
def premium():
    return render_template('pages/premium.html', output_text="")

@app.route('/finance')
def finance():
    return render_template('pages/finance.html')

@app.route('/mypage')
def mypage():
    return render_template('pages/mypage.html')

@app.route('/charge', methods=['POST'])
def charge():
    try:
        # フロントエンドから送られてくるトークンを取得
        token = request.form['stripeToken']
        
        # 決済処理
        charge = stripe.Charge.create(
            amount=1000,  # 単位は最小通貨単位（例：円なら「円」、ドルなら「セント」）
            currency='jpy',
            description='Example charge',
            source=token,
        )
        return jsonify({"status": "success"})
    except stripe.error.StripeError as e:
        return jsonify({"status": "error", "message": str(e)})